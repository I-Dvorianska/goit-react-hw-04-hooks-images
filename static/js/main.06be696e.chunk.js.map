{"version":3,"sources":["Searchbar/Searchbar.jsx","ImageGalleryItem/ImageGalleryItem.jsx","ImageGallery/ImageGallery.jsx","Button/Button.jsx","Modal/Modal.jsx","utils/fetchApi.jsx","App.js","index.js"],"names":["Searchbar","onSubmit","useState","search","setSearch","className","e","preventDefault","type","onChange","currentTarget","value","trim","autoComplete","autoFocus","placeholder","ImageGalleryItem","id","webformatURL","selectImage","largeImageURL","onClick","src","alt","ImageGallery","images","selected","map","image","Button","page","onLoad","onBtnClick","Modal","onCloseModal","children","onEscClick","code","window","removeEventListener","useEffect","addEventListener","target","fetchImages","nameImg","pageNumber","fetch","then","response","ok","json","Promise","reject","Error","App","searchText","setSearchText","setImages","setPage","loading","setLoading","selectedImage","setSelectedImage","showBtn","setShowBtn","res","imagesData","hits","length","notify","prevState","scrollToBottom","scrollTo","top","document","documentElement","scrollHeight","behavior","toast","showLoadMoreBtn","text","containerStyle","left","toastOptions","duration","style","border","padding","color","height","width","marginLeft","marginTop","marginBottom","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.06be696e.chunk.js","sourcesContent":["import {useState } from \"react\";\r\nimport './Searchbar.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction Searchbar ({onSubmit}) {\r\n  const [search, setSearch] = useState('');\r\n\r\nconst getSearchText = (e) => {\r\n  setSearch(e.currentTarget.value.trim());\r\n  };\r\n\r\nconst onSearchBtnClick = (e) => {\r\n  e.preventDefault();\r\n  onSubmit(search);\r\n  }\r\n  \r\n  return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={onSearchBtnClick}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={getSearchText}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={search}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n}\r\n\r\nexport default Searchbar;\r\n","import './ImageGalleryItem.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ id, webformatURL,selectImage, largeImageURL}) => {\r\n  \r\n  return <li key={id} className=\"ImageGalleryItem\" onClick={() => selectImage(largeImageURL)}>\r\n  <img src={webformatURL} alt=\"\" className=\"ImageGalleryItem-image\" />\r\n</li>\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  id: PropTypes.number,\r\n  webformatURL: PropTypes.string,\r\n  selectImage: PropTypes.func,\r\n  largeImageURL: PropTypes.string\r\n}\r\n\r\n\r\nexport default ImageGalleryItem;","import './ImageGallery.css';\r\nimport ImageGalleryItem from 'ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ images, selected }) => {\r\n   \r\n    return <ul className=\"ImageGallery\">\r\n        {images.map(image =>\r\n            <ImageGalleryItem\r\n                id={image.id}\r\n                key={image.id}\r\n                webformatURL={image.webformatURL}\r\n                largeImageURL={image.largeImageURL}\r\n                selectImage={selected}\r\n             />\r\n             )}\r\n            </ul>\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.object),\r\n    selected: PropTypes.func\r\n}\r\n\r\nexport default ImageGallery;","\r\nimport './Button.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst onBtnClick = (page, onLoad) => {       \r\nconst newPage = page + 1;\r\nonLoad(newPage)\r\n}\r\nconst Button = ({ page, onLoad }) => {\r\n\r\n    return <button type=\"button\" className=\"Button\" onClick={() => { onBtnClick(page, onLoad)}}>Load more</button>\r\n}\r\n\r\nButton.propTypes = {\r\n    page: PropTypes.number,\r\n    onLoad: PropTypes.func\r\n    }\r\nexport default Button;","import { useEffect } from 'react';\r\nimport './Modal.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nfunction Modal({ onCloseModal,  children }) {\r\n   \r\n  const onEscClick = (e) => {\r\n    if (e.code === 'Escape') {\r\n      onCloseModal();\r\n      window.removeEventListener('keydown',onEscClick)\r\n      }\r\n  }\r\n  const handleBackdropClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      onCloseModal();\r\n      }\r\n    };\r\n  \r\n   useEffect(() => {\r\n    window.addEventListener('keydown', onEscClick) \r\n   })\r\n   \r\n  return <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n    <div className=\"Modal\">\r\n    {children}\r\n    </div>\r\n    </div>\r\n};\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node,\r\n  onCloseModal: PropTypes.func\r\n  }\r\n\r\nexport default Modal;","function fetchImages(nameImg, pageNumber) {\r\n  const URL = 'https://pixabay.com/api';\r\n  const KEY = '22634549-5cdc48e9fdfcb009c2ce01724';\r\n\r\n  return fetch(\r\n    `${URL}/?q=${nameImg}&page=${pageNumber}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`Мы не нашли такой картинки по запросу ${nameImg}`));\r\n  });\r\n}\r\n\r\n\r\n\r\nexport default fetchImages;","import { useEffect, useState } from \"react\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport Searchbar from \"./Searchbar/Searchbar\";\nimport \"./App.css\";\nimport ImageGallery from \"./ImageGallery/ImageGallery\";\nimport Button from \"./Button/Button\";\nimport Modal from \"./Modal/Modal\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport fetchImages from \"utils/fetchApi\";\n\nfunction App() {\n  const [searchText, setSearchText] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [showBtn, setShowBtn] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    if (!searchText) return;\n\n    fetchImages(searchText, page).then((res) => {\n      const imagesData = res.hits;\n      if (imagesData.length === 0) {\n        return notify();\n      }\n\n      if (imagesData.length === 12) {\n        setImages((prevState) => [...prevState, ...imagesData]);\n        setLoading(false);\n        setShowBtn(true);\n        if (imagesData.length < 12) {\n          setShowBtn(false);\n        }\n      }\n\n      if (page > 1) {\n        scrollToBottom();\n      }\n    });\n  }, [page, searchText]);\n\n  const getSearchFieldText = (text) => {\n    setImages([]);\n    setPage(1);\n    setSearchText(text);\n  };\n\n  const changePageNumber = (page) => {\n    setPage(page);\n  };\n\n  const selectImage = (image) => {\n    setSelectedImage(image);\n  };\n\n  const closeModal = (e) => {\n    setSelectedImage(null);\n  };\n\n  const scrollToBottom = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  const notify = () => toast(\"Here is no images to show\");\n\n  const showLoadMoreBtn = images.length > 0 && !loading && showBtn;\n\n  return (\n    <>\n      <Searchbar onSubmit={getSearchFieldText} />\n      <Toaster\n        containerStyle={{\n          top: 300,\n          left: 0,\n        }}\n        toastOptions={{\n          duration: 2000,\n          style: {\n            border: \"2px solid #e60000\",\n            padding: \"8px\",\n            color: \"#e60000\",\n          },\n        }}\n      />\n      {images.length > 0 && (\n        <ImageGallery images={images} selected={selectImage} />\n      )}\n      {loading && (\n        <div className=\"LoaderDiv\">\n          <Loader\n            type=\"Circles\"\n            color=\"#46c5f0\"\n            height={40}\n            width={60}\n            style={{\n              marginLeft: \"610px\",\n              marginTop: \"20px\",\n              marginBottom: \"20px\",\n            }}\n            timeout={1000}\n          />\n        </div>\n      )}\n      {selectedImage !== null && (\n        <Modal onCloseModal={closeModal}>\n          <img src={selectedImage} alt=\"\" />\n        </Modal>\n      )}\n      {showLoadMoreBtn && <Button page={page} onLoad={changePageNumber} />}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}